#!/bin/bash bingmsg
#=========================================================================
#: FILE: bing-bash
#: PATH: $BING_FUNC/bing-bash
#: TYPE: environment
#:
#: AUTHOR:
#:      bing-bash by Ivan Ilic <ivanilic1975@gmail.com>
#:      https://github.com/mandober/bing-bash
#:      za Ç„ - Use freely at owns risk
#:      25-Apr-2016 (last revision)
#:
#: DESCRIPTION: 
#:      Configuration and initialization settings.
#:
#=========================================================================



#                                                                 ENV VARS
#=========================================================================
# Optional environmental variables used mainly for convenience.

#
#  BING
# 	 	[bing-bash] base directory
#
export BING="$HOME/bing"

# 
#  BING_FUNC
#  		[bing-bash] main functions directory
#		Top most, parent, directory that contain [bing-bash] files 
# 		with function definitions. Possibly the same as above.
# 		There could be sub-dirs with functions inside this directory.
export BING_FUNC="$BING/func"

# 
#  BING_BIN
#  		[bing-bash] bin directory
#		Directory containing [bing-bash] executable tools and functions
# 		that could be executed, aside from being sourced.
export BING_BIN="$BING_FUNC/bin"

# 
#  BING_TEMP
#  		[bing-bash] temporary directory
#		Directory containing temporary[bing-bash] files.
export BING_TEMP="$BING_FUNC/temp"

# 
#  BING_MAN
#  		[bing-bash] man directory
#		Directory containing [bing-bash] man files.
# 		BING_MAN="$BING_FUNC/man"
# 		export MANPATH="$BING_MAN:$MANPATH"
export MANPATH="$BING_FUNC/man:/usr/local/man:/usr/share/man:/usr/man"



# [bing-bash] path to sqlite db
# export BING_DB="$BING_FUNC/sys/bb.db"

# [bing-bash] name of table in sqlite db
# export BING_TBL=funcs


#
#   FPATH
#
# FPATH is an environment variable, similar to PATH, containing
# colon-delimited paths to directories containing files with functions.
# Unlike other shells that support functions autoloading, bash doesn't
# recognize this variable.
export FPATH=$BING_FUNC:$BING_FUNC/strings:$BING_FUNC/sys


#
#   [bing-bash] FLAGS
#
# If enabled bb_err function will print debugging messages.
# Temporary, until integrated into BING_BASH as a letter d
# @TODO: make BING var with letters, e.g. BING=vdc (where d
# is for debug, c for color, etc.)
# export BING_DEBUG=1


#
#   SHOPT
#
shopt -s extglob 		# enable extended regular exp
shopt -s extquote		# enables $'' and $"" quoting
shopt -s globstar       # enable ** matching
shopt -u nocasematch 	# case sensitivity with regexp
shopt -u nocaseglob     # case sensitivity when globbing
set +o noglob           # just in case it's unset
set +a 
# save current shell options
# set +o >| "$BING_TEMP/env_set"
# shopt -p >| "$BING_TEMP/env_shopt"


#
#   FUNCTIONS
#

# Always load
[[ -r "$BING_FUNC/load" ]] && . "$BING_FUNC/load"

# FUNCS
# Indexed array of function files
declare -a FUNCS=( $BING_FUNC/**/*.bash )


#
#   AUTOLOAD
#
bb_load --auto "${FUNCS[@]}"


#
#   INSERT IN DB (one time only)
#
# if [[ -r "$BING_FUNC/sql" ]]; then
# 	. "$BING_FUNC/sql"
# 	bb_sql --insert "${FUNCS[@]}"
# fi


#
#   FUNCTION ALIASES
#
[[ -r "$BING_FUNC/bing_aliases" ]] && . "$BING_FUNC/bing_aliases"


#
#   FUNCTIONS COMPLETIONS
#
complete -o default -o bashdefault -o nospace -A variable -A function echo


#
#   DATA SAMPLE
#
[[ -r "$BING_FUNC/bing_samples" ]] && . "$BING_FUNC/bing_samples"
